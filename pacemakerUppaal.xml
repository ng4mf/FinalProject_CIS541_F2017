<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.


broadcast chan VPace, VSense;

chan alarm;

// Measurements are in milliseconds
// VRP has to be between 150ms to 500ms
const int VRP = 300;</declaration>
	<template>
		<name x="5" y="5">Heart</name>
		<declaration>// Measurements are in milliseconds
clock x;
const int minWait = 900;
const int maxWait = 1400;</declaration>
		<location id="id0" x="280" y="144">
			<name x="263" y="161">Ready</name>
			<label kind="invariant" x="237" y="186">x &lt;= maxWait</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="42" y="110">x &gt;= minWait</label>
			<label kind="synchronisation" x="76" y="136">VSense!</label>
			<label kind="assignment" x="84" y="161">x = 0</label>
			<nail x="144" y="84"/>
			<nail x="144" y="212"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="433" y="110">VPace?</label>
			<label kind="assignment" x="433" y="135">x = 0</label>
			<nail x="424" y="76"/>
			<nail x="424" y="220"/>
		</transition>
	</template>
	<template>
		<name>Ventricle</name>
		<declaration>// all measurements are in milliseconds
clock x;
// Lower bound for Rate Limit is 40bpm
const int[1492,1508] LRI = 1500;

// Upper bound for Rate Limit is 100bpm
const int[592,608] URI = 600;

// Hysteresis rate interval = 30bpm
const int HRI = 2000;

//int[URI, LRI] HRI = LRI;

int RI = HRI;

bool started = false, natural_beat = true;
</declaration>
		<location id="id1" x="383" y="-391">
			<name x="391" y="-425">WaitVRP</name>
			<label kind="invariant" x="391" y="-374">x &lt;= VRP</label>
		</location>
		<location id="id2" x="-212" y="-391">
			<name x="-271" y="-425">WaitRI</name>
			<label kind="invariant" x="-271" y="-383">x &lt;= RI</label>
		</location>
		<location id="id3" x="-59" y="-391">
			<name x="-170" y="-382">PostWaitPreSense</name>
			<committed/>
		</location>
		<location id="id4" x="68" y="-391">
			<name x="58" y="-425">Sensed</name>
			<committed/>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-25" y="-374">x &gt;= URI</label>
			<nail x="-42" y="-374"/>
			<nail x="51" y="-374"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-24" y="-450">x &lt; URI</label>
			<label kind="synchronisation" x="-24" y="-433">alarm!</label>
			<nail x="-42" y="-408"/>
			<nail x="51" y="-408"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-144" y="-408">VSense?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-59" y="-332">x &gt;= VRP</label>
			<label kind="assignment" x="145" y="-331">started = true</label>
			<nail x="332" y="-306"/>
			<nail x="-152" y="-306"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-50" y="-501">x &gt;= RI</label>
			<label kind="synchronisation" x="43" y="-501">VPace!</label>
			<label kind="assignment" x="111" y="-501">x = 0, RI = LRI, natural_beat=false</label>
			<nail x="-144" y="-476"/>
			<nail x="332" y="-476"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="assignment" x="110" y="-408">x = 0, RI = HRI, natural_beat=true</label>
			<nail x="348" y="-391"/>
		</transition>
	</template>
	<template>
		<name>Observer</name>
		<declaration>int vstarted, tv;

bool alarmSet=false;</declaration>
		<location id="id5" x="-170" y="-246">
			<name x="-238" y="-280">VSensed</name>
			<committed/>
		</location>
		<location id="id6" x="110" y="-25">
			<name x="127" y="-42">VPaced</name>
			<committed/>
		</location>
		<location id="id7" x="-170" y="-25">
			<name x="-238" y="-34">WaitRL</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id7"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-195" y="34">alarm?</label>
			<label kind="assignment" x="-221" y="51">alarmSet=true</label>
			<nail x="-144" y="34"/>
			<nail x="-204" y="34"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-110" y="-259">alarm?</label>
			<label kind="assignment" x="-110" y="-242">alarmSet=true</label>
			<nail x="-110" y="-212"/>
			<nail x="-110" y="-272"/>
			<nail x="-110" y="-280"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<nail x="-34" y="34"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<nail x="-110" y="-127"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-238" y="-144">VSense?</label>
			<label kind="assignment" x="-289" y="-127">alarmSet=false</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-68" y="-42">VPace?</label>
			<label kind="assignment" x="-85" y="-25">alarmSet=false</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// Process = Template();
// List one or more processes to be composed into a system.
system Heart, Ventricle, Observer;
    </system>
	<queries>
		<query>
			<formula>A[] (Ventricle.x&lt;Ventricle.URI &amp;&amp; Ventricle.Sensed imply Observer.alarmSet==true)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] (Ventricle.x &lt; VRP &amp;&amp; Ventricle.started) imply (Ventricle.WaitVRP || Ventricle.PostWaitPreSense || Ventricle.Sensed)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] ((Ventricle.WaitRI &amp;&amp; Ventricle.started &amp;&amp; !Ventricle.natural_beat) imply Ventricle.x &lt;= Ventricle.LRI)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] ((Ventricle.WaitRI &amp;&amp; Ventricle.started &amp;&amp; Ventricle.natural_beat) imply Ventricle.x &lt;= Ventricle.HRI)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] ((Ventricle.WaitRI &amp;&amp; Ventricle.started)) imply Ventricle.x &gt;= VRP
</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
